# Generated by Django 5.1 on 2024-08-31 00:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import localflavor.br.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cnpj', localflavor.br.models.BRCNPJField(max_length=18, unique=True)),
                ('corporate_reason', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('seller', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="O número de telefone deve estar no formato: '(99) 9999-9999'. Até 15 dígitos são permitidos.", regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Requester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sector', models.ManyToManyField(related_name='requester_sector', to='stock.sector')),
                ('unit', models.ManyToManyField(related_name='requester_unit', to='stock.unit')),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('approval_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, null=True)),
                ('requester_name', models.CharField(blank=True, max_length=200, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=200, null=True)),
                ('unit_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sector_name', models.CharField(blank=True, max_length=200, null=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_manager', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_requester', to='stock.requester')),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_sector', to='stock.sector')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_unit', to='stock.unit')),
            ],
            options={
                'ordering': ['-date', 'requester'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('nomenclature', models.CharField(max_length=200)),
                ('supplier_cnpj', localflavor.br.models.BRCNPJField(blank=True, max_length=18, null=True)),
                ('date', models.DateField(auto_now=True)),
                ('purchase_frequency', models.CharField(choices=[('Efetuada', 'Efetuada'), ('Não efetuada', 'Não efetuada')], max_length=50)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='item_supplier', to='stock.supplier')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solicitation_date', models.DateField(auto_now=True)),
                ('unit_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sector_name', models.CharField(blank=True, max_length=200, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('deleviry_forecast', models.DateField()),
                ('deleviry_date', models.DateField()),
                ('service', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=500)),
                ('supplier_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('Feito', 'Feito'), ('Não Feito', 'Não Feito'), ('Parcialmente Feito', 'Parcialmente Feito'), ('Em andamento', 'Em andamento')], max_length=50)),
                ('feedback', models.TextField(max_length=500)),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_sector', to='stock.sector')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_supplier', to='stock.supplier')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_unit', to='stock.unit')),
            ],
            options={
                'ordering': ['-solicitation_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('item', models.CharField(max_length=200)),
                ('brand', models.CharField(max_length=200)),
                ('specification', models.TextField(max_length=200)),
                ('description', models.TextField(max_length=200)),
                ('justification', models.TextField(max_length=200)),
                ('quantity', models.IntegerField()),
                ('requester_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sector_name', models.CharField(blank=True, max_length=200, null=True)),
                ('unit_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('Aprovado', 'Aprovado'), ('Análise', 'Análise'), ('Negado', 'Negado')], default='Análise', max_length=50)),
                ('purchase_status', models.CharField(choices=[('Efetuada', 'Efetuada'), ('Não efetuada', 'Não efetuada')], default='Não efetuada', max_length=50)),
                ('feedback', models.TextField(blank=True, max_length=500, null=True)),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_requester', to='stock.requester')),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_sector', to='stock.sector')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_unit', to='stock.unit')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Outflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('item_name', models.CharField(blank=True, max_length=200, null=True)),
                ('sector_name', models.CharField(blank=True, max_length=200, null=True)),
                ('requester_name', models.CharField(blank=True, max_length=200, null=True)),
                ('quantity', models.IntegerField()),
                ('source_stock_name', models.CharField(blank=True, max_length=200, null=True)),
                ('target_stock_name', models.CharField(blank=True, max_length=200, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outflow_item', to='stock.item')),
                ('requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outflow_requester', to='stock.requester')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outflow_sector', to='stock.sector')),
                ('source_stock', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='source_stock', to='stock.unit')),
                ('target_stock', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='target_stock', to='stock.unit')),
            ],
            options={
                'ordering': ['-date', 'item', 'sector', 'source_stock'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_available', models.IntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_item', to='stock.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventario', to='stock.unit')),
            ],
            options={
                'ordering': ['item', 'unit'],
            },
        ),
        migrations.CreateModel(
            name='Inflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('item_name', models.CharField(blank=True, max_length=200, null=True)),
                ('validity', models.DateField(blank=True, null=True)),
                ('invoice', models.CharField(max_length=200)),
                ('invoice_pdf', models.FileField(blank=True, null=True, upload_to='pdfs/inflow/invoice')),
                ('source_stock_name', models.CharField(blank=True, max_length=200, null=True)),
                ('target_stock_name', models.CharField(blank=True, max_length=200, null=True)),
                ('unit_cost', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('observation', models.TextField(blank=True, max_length=300, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inflow_item', to='stock.item')),
                ('source_stock', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inflow_source', to='stock.unit')),
                ('target_stock', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inflow_target', to='stock.unit')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inflow_unit', to='stock.unit')),
            ],
            options={
                'ordering': ['-date', 'item'],
            },
        ),
        migrations.CreateModel(
            name='RequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='request_item', to='stock.item')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_item_request', to='stock.request')),
            ],
            options={
                'unique_together': {('request', 'item')},
            },
        ),
    ]
